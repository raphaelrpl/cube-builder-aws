openapi: 3.0.0

info:
  description: Cube generation - API Cube Builder AWS
  version: "0.2.0"
  title: API Cube Builder (AWS)
  contact:
    name: BDC INPE
    email: brazildatacube@dpi.inpe.br
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: 'https://localhost'
    description: Dev Server

tags:
  - name: "status"
    description: "Status service"
  - name: "cube_builder"
    description: "Cube Builder service"

paths:
  /:
    get:
      tags:
        - 'status'
      summary: 'The application health status'
      description: "Returns the root Cube Builder system status"
      responses:
        '200':
          $ref: '#/components/responses/Root'
        '500':
          $ref: '#/components/responses/ServerError'

  /cubes:
    get:
      tags:
        - 'Cubes'
      summary: The data cubes available
      responses:
        200:
          $ref: '#/components/responses/DataCubes'
        500:
          $ref: '#/components/responses/ServerError'

    post:
      tags:
        - 'Cubes'
      summary: "Create a data cube definition"
      description: "Creates a data cube definition and make it available to be started."
      requestBody:
        description: "Initial informations to create Cube"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CubeType"
      responses:
        '201':
          $ref: '#/components/responses/Cubes'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '500':
          $ref: '#/components/responses/ServerError'

  /cubes/{cubeId}:
    get:
      tags:
        - 'Cubes'
      summary: The Data Cube definition.
      parameters:
        - $ref: '#/components/parameters/cubeId'
      responses:
        200:
          $ref: '#/components/responses/DataCube'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/ServerError'

  /cubes/{cubeId}/metadata:
    get:
      tags:
        - 'Cubes'
      summary: The parameters used to generate the given data cube.
      parameters:
        - $ref: '#/components/parameters/cubeId'
      responses:
        '200':
          $ref: '#/components/responses/DataCubeMeta'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /cubes/{cubeId}/tiles:
    get:
      tags:
        - 'Cubes'
      summary: The tiles which has any data cube item generated.
      parameters:
        - $ref: '#/components/parameters/cubeId'
      responses:
        '200':
          $ref: '#/components/responses/DataCubeTiles'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /cubes/{cubeId}/tiles/geom:
    get:
      tags:
        - 'Cubes'
      summary: The GeoJSON features of data cube tiles.
      parameters:
        - $ref: '#/components/parameters/cubeId'
      responses:
        '200':
          $ref: '#/components/responses/DataCubeTilesFeature'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /cubes/{cubeId}/items:
    get:
      tags:
        - 'Cubes'
      summary: The data cube items available
      parameters:
        - $ref: '#/components/parameters/cubeId'
      responses:
        '200':
          $ref: '#/components/responses/DataCubeItems'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /composite-functions:
    get:
      tags:
        - 'Composite Functions'
      summary: The supported composite functions for data cube generation.
      responses:
        '200':
          $ref: '#/components/responses/CompositeFunctions'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      tags:
        - 'Composite Functions'
      summary: Create a composite function
      requestBody:
        $ref: '#/components/requestBodies/CompositeFunction'
      responses:
        '201':
          $ref: '#/components/responses/CompositeFunction'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /list-buckets:
    get:
      tags:
        - "create-cube"
      summary: The available buckets managed by Cube Builder.
      responses:
        200:
          type: array
          items:
            type: string
        500:
          $ref: '#/components/responses/ServerError'

  /create-bucket:
    post:
      tags:
        - "create-cube"
      summary: Create a bucket on AWS environment and set to be managed by Cube Builder.
      responses:
        200:
          type: object
          properties:
            name:
              description: Bucket name
              type: string
            requester_pay:
              description: Flag to create bucket as Requester-Pay. Default is True.
              type: boolean
              default: true
        500:
          $ref: '#/components/responses/ServerError'

  /create-grs:
    post:
      tags:
        - "get-grids"
      summary: "Create GRS"
      description: |-
        Create BDC GRS (Geographic Reference System)

        You may follow the [BDC-Grid](https://brazil-data-cube.github.io/products/specifications/bdc-grid.html)
        for further details how a BDC Grid works.
      requestBody:
        description: "Initial informations to create GRS"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GRS"
      responses:
        201:
          description: "Successfully"
          content:
            application/json:
              schema:
                type: string

  /grids:
    get:
      tags:
        - "get-grids"
      summary: The available Grid System for data cubes.
      responses:
        200:
          $ref: '#/components/responses/Grids'
        500:
          $ref: '#/components/responses/ServerError'

  /grids/{gridId}:
    get:
      tags:
        - "get-grids"
      summary: The Grid System definition
      operationId: getGrid
      parameters:
        - $ref: '#/components/parameters/gridId'
      responses:
        200:
          $ref: '#/components/responses/Grid'
        404:
          $ref: '#/components/responses/NotFoundError'

  /start:
    get:
      tags:
        - "create-cube"
      summary: "Start Process"
      description: "Start process to generate cube"
      parameters:
        - in: "query"
          name: "datacube"
          required: true
          description: "Cube name"
        - in: "query"
          name: "tiles"
          required: true
          description: "list of tiles"
        - in: "query"
          name: "start_date"
          required: true
          description: "start date to generate cube (format => yyyy-mm-dd)"
        - in: "query"
          name: "end_date"
          required: true
          description: "end date to generate cube (format => yyyy-mm-dd)"
        - in: "query"
          name: "collections"
          required: true
          description: "list of base collections"
      responses:
        200:
          description: "Successfully"
          content:
            application/json:
              schema:
                type: string

  /list-merges:
    get:
      tags:
        - "cube-status"
      summary: Retrieve all the data cube Identity scenes built along given period and space.
      parameters:
        - $ref: '#/components/parameters/cubeId'
        - $ref: '#/components/parameters/tileId'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        200:
          $ref: '#/components/responses/ListMerges'
        500:
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    cubeId:
      name: cubeId
      in: path
      description: local identifier of a data cube
      required: true
      schema:
        type: number
    gridId:
      name: gridId
      in: path
      description: local identifier of a grid reference system
      required: true
      schema:
        type: number
    tileId:
      name: tileId
      in: path
      description: local identifier for Tile or pathrow of a data cube
      required: true
      schema:
        type: number
    startDate:
      name: startDate
      in: path
      description: local identifier for representing start period
      required: true
      schema:
        type: string
    endDate:
      name: endDate
      in: path
      description: local identifier for representing end period
      required: true
      schema:
        type: string

  requestBodies:
    Cube:
      description: 'A document describing the new data cube.'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubeType'

    CompositeFunction:
      description: 'A document describing the new composite function in the system.'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompositeFunctionType'

  responses:
    Root:
      description: 'The landing pages that provides the cube builder system status.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RootType'

    Cubes:
      description: 'A JSON document with the list of cubes informations.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubesType'

    CompositeFunction:
      description: 'A JSON document with the Composite Functiion definition'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompositeFunctionType'

    CompositeFunctions:
      description: 'A JSON document with the list of supported Composite Functions by Cube Builder.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompositeFunctionsType'

    ListMerges:
      description: Response the data cube identity scenes built.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MergeResult'

    Grid:
      description: Response a Grid Reference System instance.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Grid'

    Grids:
      description: Response a List of available Grid Reference System.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Grids'

    DataCube:
      description: The data cube definition
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cube'

    DataCubes:
      description: The list of data cubes definition
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cubes'

    DataCubeMeta:
      description: The list of parameters used in data cube generation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubeParameter'

    DataCubeTiles:
      description: The list of tiles of data cube already done.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubeTiles'

    DataCubeItems:
      description: The list of tiles of data cube already done.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubeItems'

    DataCubeTilesFeature:
      description: GeoJSON features.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CubeTileFeatures'

    InvalidParameter:
      description: 'A query parameter has an invalid value.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionType'

    NotFoundError:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionType'

    ServerError:
      description: A server error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionType'
        text/html:
          schema:
            type: string


  schemas:
    ExceptionType:
      title: Exception raised by the service
      description: 'Information about the exception: an error code plus an optional description.'
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
        - code

    RootType:
      title: A document to display the API status
      description: 'The landing pages that provides the cube builder system status.'
      type: object
      properties:
        description:
          type: string
        message:
          type: string
        version:
          type: string
    CubesType:
      title: List of Data Cubes definitions
      description: 'A JSON document with the list of cubes informations.'
      type: array
      items:
        $ref: '#/components/schemas/CubeType'

    CubeType:
      title: The data cube information
      description: 'A JSON document with the entire information.'
      type: object
      required:
        - name
        - title
        - description
        - metadata
        - collection_type
        - composite_function_id
      properties:
        id:
          type: integer
        name:
          type: string
        title:
          type: string
        description:
          type: string
        collection_type:
          type: string
        metadata:
          type: object
        temporal_composition_schema:
          type: object
        composite_function_id:
          type: integer
        bands:
          type: array
          items:
            $ref: '#/components/schemas/BandType'

    BandType:
      title: 'The data cube band definition'
      description: 'Store the collection band information.'
      type: object
      required:
        - name
        - common_name
        - data_type
        - resolution_id
        - resolution_x
        - resolution_y
        - mime_type_id
      properties:
        id:
          type: integer
        name:
          type: string
        common_name:
          type: string
        data_type:
          type: string
        min_value:
          type: number
        max_value:
          type: number
        nodata:
          type: number
        scale:
          type: number
        resolution_x:
          type: number
        resolution_y:
          type: number
        metadata:
          type: object

    CompositeFunctionType:
      title: 'The composite function supported by Cube Builder'
      description: ''
      type: object
      required:
        - name
        - description
        - alias
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        alias:
          type: string

    CompositeFunctionsType:
      title: 'The list of composite function available in the server.'
      description: 'A JSON document containing the supported composite functions.'
      type: array
      items:
        $ref: '#/components/schema/CompositeFunctionType'

    MergeResult:
      description: The origin scenes used to build the given merge.
      type: object
      required:
        - bands
        - collections
        - errors
      properties:
        bands:
          type: array
          items:
            type: object
            properties:
              merge:
                description: Absolute path to the data cube scene identity.
                type: string
              scenes:
                type: array
                items:
                  description: List of origin scenes used to built the current identity.
                  type: string
        collections:
          type: array
          minItems: 1
          items:
            description: List of data sets used to generate these Identity scenes.
            type: string
        errors:
          type: array
          items:
            description: The errors occurred in the generation or for accessing the resource.
            type: string

    Grid:
      description: Define a structure for Grid Reference System used to build data cubes.
      type: object
      required:
        - id
        - name
        - description
        - table_id
      properties:
        id:
          type: number
        name:
          description: The unique Grid Reference System name.
          type: string
        description:
          description: The description of a Grid Reference System.
          type: number
        table_id:
          description: The table object identifier of the Grid.
          type: string

    Grids:
      description: List of Grid Reference System
      type: array
      items:
        $ref: '#/components/schemas/Grid'

    Item:
      description: Define the BDC Item
      type: object
      required:
        - id
        - name
        - cloud_cover
        - start_date
        - end_date
        - tile_id
        - srid
      properties:
        id:
          type: number
        name:
          description: The data cube scene identifier
          type: string
        cloud_cover:
          description: The data cube cloud cover factor
          type: number
        start_date:
          description: The data cube start period
          type: string
        end_date:
          description: The data cube end period
          type: string
        tile_id:
          description: The tile name
          type: string
        srid:
          description: The Spatial Reference System

    CubeItems:
      description: List the data cube items.
      type: array
      items:
        $ref: '#/components/schemas/Item'

    TileFeature:
      description: A GeoJSON feature definition
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
        coordinates:
          type: array

    CubeParameter:
      description: The parameters used to build the data cube.
      type: object
      properties:
        url_stac:
          type: string
        collections:
          type: string
        bucket:
          type: string
        satellite:
          type: string

    CubeTileFeatures:
      description: List of tiles as GeoJSON features
      type: array
      items:
        $ref: '#/components/schemas/TileFeature'

    CubeTiles:
      description: The parameters used to build the data cube.
      type: array
      items:
        description: Tile name
        type: string

    Band:
      description: "The band definition"
      type: object
      properties:
        name:
          type: string
        common_name:
          type: string
        mime_type:
          type: string
        nodata:
          type: number
        min_value:
          type: number
        max_value:
          type: number
    Cube:
      description: "The data cube definition metadata."
      type: object
      required:
        - id
        - name
        - title
        - collection_type
        - is_public
        - version
        - grid
      properties:
        id:
          type: number
        name:
          type: string
        title:
          type: string
        description:
          type: string
        temporal_composition_schema:
          type: object
        collection_type:
          type: string
        metadata:
          type: object
        is_public:
          type: boolean
        version:
          type: number
        composite_function:
          type: string
        grid:
          type: string
        quicklook:
          type: array
          items:
            type: string
        bands:
          type: array
          items:
            $ref: '#/components/schemas/Band'
    Cubes:
      type: array
      items:
        $ref: '#/components/schemas/Cube'
    GRS:
      type: object
      required:
        - name
        - description
        - projection
        - meridian
        - degreesx
        - degreesy
        - bbox
      properties:
        name:
          type: string
          description: GRS name
        description:
          type: string
          description: GRS description
        projection:
          type: string
          description: GRS projection (allow => aea, longlat, sinu)
        meridian:
          type: number
          description: central meridian of area
        degreesx:
          type: number
          description: size (X) in degrees of each tile (in degrees)
        degreesy:
          type: number
          description: size (Y) in degrees of each tile (in degrees)
        bbox:
          type: string
          description: bounding box of area (in lnglat) - (W, N, E, S)

    raster_size:
      type: object
      required:
        - grs_schema
        - resolution
        - chunk_size_x
        - chunk_size_y
      properties:
        grs_schema:
          type: string
          description: GRS name
        resolution:
          type: number
          description: Spatial Resolution of cube
        chunk_size_x:
          type: number
          description: chunk size X
        chunk_size_y:
          type: number
          description: chunk size Y

    BandCreation:
      type: object
      required:
        - name
        - common_name
        - data_type
      properties:
        name:
          type: string
        common_name:
          type: string
        data_type:
          type: string
        metadata:
          type: object
